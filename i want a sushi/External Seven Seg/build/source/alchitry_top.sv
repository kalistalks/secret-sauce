/*
    This file was generated automatically by Alchitry Labs 2.0.30-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module alchitry_top (
        input wire clk,
        input wire rst_n,
        output reg [7:0] led,
        input wire usb_rx,
        output reg usb_tx,
        output reg [2:0][7:0] io_led,
        output reg [7:0] io_segment,
        output reg [3:0] io_select,
        output reg [5:0] ext_select,
        input wire [4:0] io_button,
        input wire [2:0][7:0] io_dip
    );
    logic rst;
    localparam _MP_STAGES_2071206085 = 3'h4;
    logic M_reset_cond_in;
    logic M_reset_cond_out;
    
    reset_conditioner #(
        .STAGES(_MP_STAGES_2071206085)
    ) reset_cond (
        .clk(clk),
        .in(M_reset_cond_in),
        .out(M_reset_cond_out)
    );
    
    
    localparam _MP_RISE_1902572154 = 1'h1;
    localparam _MP_FALL_1902572154 = 1'h0;
    logic M_edge_detector_in;
    logic M_edge_detector_out;
    
    edge_detector #(
        .RISE(_MP_RISE_1902572154),
        .FALL(_MP_FALL_1902572154)
    ) edge_detector (
        .clk(clk),
        .in(M_edge_detector_in),
        .out(M_edge_detector_out)
    );
    
    
    localparam _MP_DIGITS_1381043471 = 3'h6;
    localparam _MP_DIV_1381043471 = 5'h10;
    logic [5:0][5:0] M_seg_values;
    logic [6:0] M_seg_seg;
    logic [5:0] M_seg_sel;
    
    multi_seven_seg #(
        .DIGITS(_MP_DIGITS_1381043471),
        .DIV(_MP_DIV_1381043471)
    ) seg (
        .clk(clk),
        .rst(rst),
        .values(M_seg_values),
        .seg(M_seg_seg),
        .sel(M_seg_sel)
    );
    
    
    localparam _MP_DIGITS_1997519225 = 3'h6;
    logic M_dec_ctr_inc;
    logic [5:0][5:0] M_dec_ctr_digits;
    
    multi_decimal_counter #(
        .DIGITS(_MP_DIGITS_1997519225)
    ) dec_ctr (
        .clk(clk),
        .rst(rst),
        .inc(M_dec_ctr_inc),
        .digits(M_dec_ctr_digits)
    );
    
    
    localparam _MP_SIZE_406434865 = 1'h1;
    localparam _MP_DIV_406434865 = 4'hf;
    localparam _MP_TOP_406434865 = 1'h0;
    localparam _MP_UP_406434865 = 1'h1;
    logic [0:0] M_ctr_value;
    
    counter #(
        .SIZE(_MP_SIZE_406434865),
        .DIV(_MP_DIV_406434865),
        .TOP(_MP_TOP_406434865),
        .UP(_MP_UP_406434865)
    ) ctr (
        .clk(clk),
        .rst(rst),
        .value(M_ctr_value)
    );
    
    
    always @* begin
        M_reset_cond_in = ~rst_n;
        rst = M_reset_cond_out;
        led = {3'h0, io_button};
        usb_tx = usb_rx;
        M_edge_detector_in = M_ctr_value;
        M_dec_ctr_inc = M_edge_detector_out;
        M_seg_values = M_dec_ctr_digits;
        io_segment = ~M_seg_seg;
        io_select = ~M_seg_sel;
        ext_select = M_seg_sel;
        io_led = io_dip;
    end
    
    
endmodule