/*
    This file was generated automatically by Alchitry Labs 2.0.29-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module game_cu (
        input wire clk,
        input wire rst,
        input wire [31:0] regfile_rd2,
        input wire p1_button_left,
        input wire p1_button_right,
        input wire p1_button_flip,
        input wire p2_button_left,
        input wire p2_button_right,
        input wire p2_button_flip,
        output reg [5:0] alufn,
        output reg [2:0] asel,
        output reg [2:0] bsel,
        output reg [1:0] alu_out_sel,
        output reg [3:0] regfile_wa,
        output reg [3:0] regfile_ra1,
        output reg [3:0] regfile_ra2,
        output reg regfile_we,
        output reg [3:0] debug
    );
    localparam E_GameStates_IDLE_GAME = 6'h0;
    localparam E_GameStates_CHECK_P1_POS = 6'h1;
    localparam E_GameStates_CHECK_P1_LEFT = 6'h2;
    localparam E_GameStates_BRANCH_P1_LEFT = 6'h3;
    localparam E_GameStates_DECREASE_P1_CHEF = 6'h4;
    localparam E_GameStates_CHECK_P1_RIGHT = 6'h5;
    localparam E_GameStates_BRANCH_P1_RIGHT = 6'h6;
    localparam E_GameStates_INCREASE_P1_CHEF = 6'h7;
    localparam E_GameStates_CHECK_P1_LANE_1 = 6'h8;
    localparam E_GameStates_BRANCH_P1_LANE_1 = 6'h9;
    localparam E_GameStates_FLIP_P1_LANE_1 = 6'ha;
    localparam E_GameStates_CHECK_P1_LANE_2 = 6'hb;
    localparam E_GameStates_BRANCH_P1_LANE_2 = 6'hc;
    localparam E_GameStates_FLIP_P1_LANE_2 = 6'hd;
    localparam E_GameStates_CHECK_P1_LANE_3 = 6'he;
    localparam E_GameStates_BRANCH_P1_LANE_3 = 6'hf;
    localparam E_GameStates_FLIP_P1_LANE_3 = 6'h10;
    localparam E_GameStates_CHECK_P1_LANE_4 = 6'h11;
    localparam E_GameStates_BRANCH_P1_LANE_4 = 6'h12;
    localparam E_GameStates_FLIP_P1_LANE_4 = 6'h13;
    localparam E_GameStates_CHECK_P2_POS = 6'h14;
    localparam E_GameStates_CHECK_P2_LEFT = 6'h15;
    localparam E_GameStates_BRANCH_P2_LEFT = 6'h16;
    localparam E_GameStates_DECREASE_P2_CHEF = 6'h17;
    localparam E_GameStates_CHECK_P2_RIGHT = 6'h18;
    localparam E_GameStates_BRANCH_P2_RIGHT = 6'h19;
    localparam E_GameStates_INCREASE_P2_CHEF = 6'h1a;
    localparam E_GameStates_CHECK_P2_LANE_1 = 6'h1b;
    localparam E_GameStates_BRANCH_P2_LANE_1 = 6'h1c;
    localparam E_GameStates_FLIP_P2_LANE_1 = 6'h1d;
    localparam E_GameStates_CHECK_P2_LANE_2 = 6'h1e;
    localparam E_GameStates_BRANCH_P2_LANE_2 = 6'h1f;
    localparam E_GameStates_FLIP_P2_LANE_2 = 6'h20;
    localparam E_GameStates_CHECK_P2_LANE_3 = 6'h21;
    localparam E_GameStates_BRANCH_P2_LANE_3 = 6'h22;
    localparam E_GameStates_FLIP_P2_LANE_3 = 6'h23;
    localparam E_GameStates_CHECK_P2_LANE_4 = 6'h24;
    localparam E_GameStates_BRANCH_P2_LANE_4 = 6'h25;
    localparam E_GameStates_FLIP_P2_LANE_4 = 6'h26;
    logic [5:0] D_game_fsm_d, D_game_fsm_q = 6'h0;
    always @* begin
        D_game_fsm_d = D_game_fsm_q;
        
        alufn = 1'h0;
        asel = 1'h0;
        bsel = 1'h0;
        regfile_we = 1'h0;
        regfile_wa = 3'h6;
        regfile_ra1 = 1'h0;
        regfile_ra2 = 1'h0;
        alu_out_sel = 1'h0;
        debug = 4'h0;
        D_game_fsm_d = D_game_fsm_q;
        if (rst) begin
            D_game_fsm_d = 6'h0;
        end else begin
            
            case (D_game_fsm_q)
                6'h0: begin
                    if (p1_button_left) begin
                        D_game_fsm_d = 6'h2;
                    end else begin
                        if (p1_button_right) begin
                            D_game_fsm_d = 6'h5;
                        end else begin
                            if (p1_button_flip && ~p2_button_flip) begin
                                D_game_fsm_d = 6'h8;
                            end else begin
                                if (p2_button_left) begin
                                    D_game_fsm_d = 6'h15;
                                end else begin
                                    if (p2_button_right) begin
                                        D_game_fsm_d = 6'h18;
                                    end else begin
                                        if (~p1_button_flip && p2_button_flip) begin
                                            D_game_fsm_d = 6'h1b;
                                        end else begin
                                            D_game_fsm_d = 6'h0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                6'h2: begin
                    alufn = 6'h33;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h4;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h3;
                end
                6'h3: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h0;
                    end else begin
                        D_game_fsm_d = 6'h4;
                    end
                end
                6'h4: begin
                    alufn = 6'h1;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h1;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'h0;
                end
                6'h5: begin
                    alufn = 6'h33;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h6;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h6;
                end
                6'h6: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h0;
                    end else begin
                        D_game_fsm_d = 6'h7;
                    end
                end
                6'h7: begin
                    alufn = 6'h0;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h1;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'h0;
                end
                6'h8: begin
                    alufn = 6'h33;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h4;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h9;
                end
                6'h9: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'ha;
                    end else begin
                        D_game_fsm_d = 6'hb;
                    end
                end
                6'ha: begin
                    alufn = 6'h0;
                    bsel = 3'h1;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h0;
                end
                6'hb: begin
                    alufn = 6'h33;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h1;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'hc;
                end
                6'hc: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'hd;
                    end else begin
                        D_game_fsm_d = 6'he;
                    end
                end
                6'hd: begin
                    alufn = 6'h0;
                    bsel = 3'h1;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    D_game_fsm_d = 6'h0;
                end
                6'he: begin
                    alufn = 6'h33;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h3;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'hf;
                end
                6'hf: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h10;
                    end else begin
                        D_game_fsm_d = 6'h11;
                    end
                end
                6'h10: begin
                    alufn = 6'h0;
                    bsel = 3'h1;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    D_game_fsm_d = 6'h0;
                end
                6'h11: begin
                    alufn = 6'h33;
                    regfile_ra1 = 2'h3;
                    bsel = 3'h6;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h12;
                end
                6'h12: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h13;
                    end else begin
                        D_game_fsm_d = 6'h0;
                    end
                end
                6'h13: begin
                    alufn = 6'h0;
                    bsel = 3'h1;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 4'h8;
                    D_game_fsm_d = 6'h0;
                end
                6'h15: begin
                    alufn = 6'h33;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h4;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h16;
                end
                6'h16: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h0;
                    end else begin
                        D_game_fsm_d = 6'h17;
                    end
                end
                6'h17: begin
                    alufn = 6'h1;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h1;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h4;
                    D_game_fsm_d = 6'h0;
                end
                6'h18: begin
                    alufn = 6'h33;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h6;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h19;
                end
                6'h19: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h0;
                    end else begin
                        D_game_fsm_d = 6'h1a;
                    end
                end
                6'h1a: begin
                    alufn = 6'h0;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h1;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h4;
                    D_game_fsm_d = 6'h0;
                end
                6'h1b: begin
                    alufn = 6'h33;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h4;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h1c;
                end
                6'h1c: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h1d;
                    end else begin
                        D_game_fsm_d = 6'h1e;
                    end
                end
                6'h1d: begin
                    alufn = 6'h0;
                    bsel = 3'h3;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h0;
                end
                6'h1e: begin
                    alufn = 6'h33;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h1;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h1f;
                end
                6'h1f: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h20;
                    end else begin
                        D_game_fsm_d = 6'h21;
                    end
                end
                6'h20: begin
                    alufn = 6'h0;
                    bsel = 3'h3;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    D_game_fsm_d = 6'h0;
                end
                6'h21: begin
                    alufn = 6'h33;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h3;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h22;
                end
                6'h22: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h23;
                    end else begin
                        D_game_fsm_d = 6'h24;
                    end
                end
                6'h23: begin
                    alufn = 6'h0;
                    bsel = 3'h3;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    D_game_fsm_d = 6'h0;
                end
                6'h24: begin
                    alufn = 6'h33;
                    regfile_ra1 = 3'h4;
                    bsel = 3'h6;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'hf;
                    D_game_fsm_d = 6'h25;
                end
                6'h25: begin
                    regfile_ra2 = 4'hf;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h26;
                    end else begin
                        D_game_fsm_d = 6'h0;
                    end
                end
                6'h26: begin
                    alufn = 6'h0;
                    bsel = 3'h3;
                    asel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 4'h8;
                    D_game_fsm_d = 6'h0;
                end
            endcase
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_game_fsm_q <= 6'h0;
        end else begin
            D_game_fsm_q <= D_game_fsm_d;
        end
    end
endmodule