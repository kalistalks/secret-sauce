module game_cu (
    input clk,  // clock
    input rst,  // reset
    input increase_counter,
    input decrease_timer,
    input regfile_rd2[32], //direct reading of regfile data from rd2
    
    // p1 and p2 buttons, 3 each
    input p1_button_1,
    input p1_button_2,
    input p1_button_3,
    input p2_button_1,
    input p2_button_2,
    input p2_button_3
    
    output alufn[6],
    output asel[3],
    output bsel[3],
    output alu_out_sel[2],
    output regfile_wa[3],
    output regfile_ra1[3],
    output regfile_ra2[3],
    output regfile_we,
    output debug[4]
) {
        
    enum GameStates {
        IDLE_MAIN,
        WAIT_FOR_BUTTON_6,
        START_SET_TIMER,
        IDLE_GAME,
        CHECK_GAME_TIMER,
        DECREASE_GAME_TIMER,
        TBC,
        MOVE_P1_UP,
        MOVE_P1_DOWN,
        MOVE_P2_UP,
        MOVE_P2_DOWN,
        GET_CURRENT_P1_BELT,
        CHECK_P1_LANE,
        UPDATE_BELT_BLUE,
        GET_CURRENT_P2_BELT,
        CHECK_P2_LANE,
        UPDATE_BELT_RED,
        CHECK_DRAW,
        DRAW,
        CHECK_WINNER,
        P1_WIN,
        P2_WIN,
        P1_LOSE,
        P2_LOSE,
        END,
        UPDATE_SUSHI_POS,
        CHECK_SUSHI_END_P1,
        BRANCH_SUSHI_END_P1,
        CHECK_SUSHI_END_P2,
        BRANCH_SUSHI_END_P2,
        UPDATE_POINTS_P1,
        UPDATE_POINTS_P2,
        SPAWN_SUSHI    
    }

    dff game_fsm[$width(GameStates)](#INIT(GameStates.IDLE_MAIN), .clk(clk), .rst(rst))
    
    always {
        
        // standard setting unless otherwise overwritten by each case 
        alufn = 0
        asel = 0 
        bsel = 0
        regfile_we = 0
        regfile_wa = d15 // temp register
        regfile_ra1 = d0
        regfile_ra2 = d0
        alu_out_sel = 0
        
        debug = b0000
        
        
        game_fsm.d = game_fsm.q
        if (rst){ // if we press the RESET button
            game_fsm.d = GameStates.IDLE_MAIN
        }
        else{
            
            case (states.q){
                // different states below
                States.IDLE_MAIN:
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6                     
                    states.d = States.WAIT_FOR_BUTTON_6
                    
                States.WAIT_FOR_BUTTON_6:
                    // detect button 6 is pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.START_SET_TIMER
                    
                States.START_SET_TIMER:
                    // start 30 seconds timer 
                    alufn = b000000                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.IDLE_GAME
                    
                States.IDLE_GAME:
                    // decrease slow clock by 1
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_GAME_TIMER        
                    
                    // if button 1 pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.MOVE_P1_UP              // line 54              
                    
                    // if button 2 pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6 
                    states.d = States.MOVE_P1_DOWN
                    
                    // if button 3 pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.GET_CURRENT_P1_BELT
                    
                    // if button 4 pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.MOVE_P2_UP
                    
                    // if button 5 pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.MOVE_P2_DOWN
                    
                    // if button 6 pressed
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.GET_CURRENT_P2_BELT
                    
                States.CHECK_GAME_TIMER:
                    // check if game timer == 0
                    // if game timer != 0
                    alufn = b110101                             
                    regfile_ra1 = d2
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.DECREASE_GAME_TIMER   // line 134
                
                    // else 
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_DRAW        // line 98
                    
                States.MOVE_P1_UP:
                    // change position of player 1 up by 1
                    // update chef position
                    alufn = b000000                             
                    regfile_ra1 = d3             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d3
                    states.d = States.IDLE_GAME
                    
                States.MOVE_P1_DOWN:
                    // change position of player 1 down by 1
                    // update chef position
                    alufn = b000001                             
                    regfile_ra1 = d3             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d3
                    states.d = States.IDLE_GAME
                
                States.MOVE_P2_UP:
                    // change position of player 2 up by 1
                    // update chef position
                    alufn = b000000                             
                    regfile_ra1 = d4             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d4
                    states.d = States.IDLE_GAME
                    
                States.MOVE_P2_DOWN:
                    // change position of player 2 down by 1
                    // update chef position
                    alufn = b000001                             
                    regfile_ra1 = d4             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d4
                    states.d = States.IDLE_GAME
                    
                States.GET_CURRENT_P1_BELT:
                    // get current P1 Lane
                    alufn = b110101                             
                    regfile_ra1 = d5            
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d5
                    states.d = States.CHECK_P1_LANE
                
                States.CHECK_P1_LANE:
                    // check lane is within 0-3
                    alufn = b110101                             
                    regfile_ra1 = d5             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d5
                    states.d = States.UPDATE_BELT_BLUE
                
                States.UPDATE_BELT_BLUE:
                    // update lane to blue then loop back to idle game
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.IDLE_GAME
                
                States.GET_CURRENT_P2_BELT:
                    // get current P1 Lane
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_P2_LANE
                
                States.CHECK_P2_LANE:
                    // check lane is within 0-3
                    alufn = b110101

                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.UPDATE_BELT_RED
                
                States.UPDATE_BELT_RED:
                    // update lane to red then loop back to idle game
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.IDLE_GAME
                                
                States.CHECK_DRAW:
                    // check draw or have winner
                    // if draw
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.DRAW
                    
                    // if not draw
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_WINNER
                
                States.DRAW:
                    // game is drawn, go to END
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.END
                
                States.CHECK_WINNER:
                    // check who is winner
                    // if P1 win
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = P1_WIN
                
                    // if P2 win
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = P2_WIN
                
                States.P1_WIN:
                    // P1 winner
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = P2_LOSE
                
                States.P2_LOSE:
                    // go to end
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.END
                
                States.P2_WIN:
                    // P2 winner
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = P1_LOSE
                
                States.P1_LOSE:
                    // go to end
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.END
                    
                States.DECREASE_GAME_TIMER:
                    // decrease game timer by 1

                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.TBC // uh
                    
                States.UPDATE_SUSHI_POS:
                    // if lane = blue
                        // sushi_pos - 1
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_SUSHI_END_P1
                    // else lane = red
                        // sushi-pos + 1
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_SUSHI_END_P2
                    
                States.CHECK_SUSHI_END_P1:
                    // if sushi_pos != 0
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.BRANCH_SUSHI_END_P1
                    
                States.BRANCH_SUSHI_END_P1:
                // if reached
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.UPDATE_POINTS_P1
                // not reached 
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.CHECK_SUSHI_END_P2
                
                States.UPDATE_POINTS_P1:
                    // p1_points + 1
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                        states.d = States.CHECK_SUSHI_END_P2
                    
                
                States.CHECK_SUSHI_END_P2:
                    // if sushi_pos != 9
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.BRANCH_SUSHI_END_P2
                
                States.BRANCH_SUSHI_END_P2:
                    // if reached
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.UPDATE_POINTS_P2
                
                    // if not reached
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.IDLE_GAME
                
                States.UPDATE_POINTS_P2:
                    // p2_points + 1
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1

                    regfile_wa = d6
                    states.d = States.SPAWN_SUSHI
                
                States.SPAWN_SUSHI:
                    // spawn sushi randomly
                    alufn = b110101                             
                    regfile_ra1 = d2             
                    bsel = b11                             
                    asel = b00 
                    regfile_we = 1
                    regfile_wa = d6
                    states.d = States.IDLE_GAME
            }
        }
    }
}
