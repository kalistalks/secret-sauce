module regfile_memory (
    input clk,  // clock
    input rst, // reset
    input ra1[5],
    input ra2[5],
    output rd1[32],
    output rd2[32],
    input wa[5],
    input wd[32],
    input we
) {
    
    dff registers[32][32](#INIT(32x{{32h0}}), .clk(clk), .rst(rst))
    
    always {
        // default connections to silence errors
        
        registers.d = registers.q
        // rd1 = 0
        // rd2 = 0 
        // TASK 7 
        // implement two output read ports   
        rd1 = registers.q[ra1]
        rd2 = registers.q[ra2]
        
        // implement one write port 
        // check if(write_en) and that we are not writing to R31 (b11111)
        if (we && wa != b11111) {
            registers.d[wa] = wd
        }
        
        // always give out 0 if we are reading R31 (from either RA ports)
        if (ra1 == b11111) {
            rd1 = 32h0
        }
        if (ra2 == b11111) {
            rd2 = 32h0
        }
    }
}